version: "3.8"

x-common-backend: &common-backend
  build:
    context: .
    dockerfile: Dockerfile
  image: stenagrafist_backend
  networks:
    - stenagrafist

x-common-db: &common-db
  image: library/postgres:13.2
  restart: unless-stopped
  env_file:
    - .env
  healthcheck:
    test: [ "CMD-SHELL", "pg_isready -U postgres" ]
    interval: 10s
    timeout: 5s
    retries: 5
  environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: ${PG_HOST}
      POSTGRES_PORT: 5432
  networks:
    - stenagrafist

services:
  web:
    <<: *common-backend
    container_name: stenagrafist_backend
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    ports:
      - 8011:8000
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./:/app/

  migrations:
    <<: *common-backend
    container_name: stenagrafist_migrations
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: ["alembic", "upgrade", "head"]
    volumes:
      - ./:/app

  db:
    <<: *common-db
    container_name: stenagrafist_postgres
    ports:
      - 5432:5432

  redis:
    container_name: redis
    image: redis:6.2.4
    ports:
      - "6379:6379"
  kafka:
    image: docker.redpanda.com/vectorized/redpanda:v22.2.2
    container_name: stenagrafist_kafka
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    healthcheck:
      test: [ "CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1" ]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
    ports:
      - "29092:29092"
    networks:
      - stenagrafist
    extra_hosts:
      - "host.docker.internal:host-gateway"
  console:
      image: docker.redpanda.com/vectorized/console:latest
      entrypoint: /bin/sh
      command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
      environment:
        CONFIG_FILEPATH: /tmp/config.yml
        CONSOLE_CONFIG_FILE: |
          kafka:
            brokers: ["kafka:29092"]
            schemaRegistry:
              enabled: true
              urls: ["http://kafka:8081"]
            messagePack:
              enabled: true
          redpanda:
            adminApi:
              enabled: true
              urls: ["http://kafka:9644"]
      ports:
        - "8080:8080"
      networks:
        - stenagrafist
      depends_on:
        - kafka

  minio:
    image: minio/minio
    command: server --console-address ":9001" /data/
    container_name: stenagrafist_minio
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - stenagrafist
    extra_hosts:
      - "host.docker.internal:host-gateway"
networks:
  stenagrafist:
    external: True